#include<iostream>
#include<vector>
#include<string>
#include<sstream>
using namespace std;

class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target);
};

vector<int> Solution::twoSum(vector<int>& numbers, int target) {
    int left = 0, right = numbers.size() - 1;

    while (left < right) {
        int sum = numbers[left] + numbers[right];
        if (sum > target) right--;
        else if (sum < target) left++;
        else return {left + 1, right + 1};  // 1-based index
    }
    return {};  // 항상 답이 있다고 했지만 예외 대비
}

int main() {
    string line;
    vector<int> numbers;
    int num, target;
    Solution sol;

    getline(cin, line);
    stringstream ss(line);
    while (ss >> num) {
        numbers.push_back(num);
    }

    cin >> target;

    vector<int> result = sol.twoSum(numbers, target);
    if (!result.empty()) {
        cout << '[' << result[0] << "," << result[1] << "]\n";
    } else {
        cout << "No valid pair found.\n";
    }

    return 0;
}
