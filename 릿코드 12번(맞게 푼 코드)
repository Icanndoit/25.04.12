#include<iostream>
#include<string>
#include<map>
using namespace std;

class Solution {
private:
	map<int, string>hash;
public:
	string intToRoman(int num);
	Solution();
};

Solution::Solution() {
	hash[1000] = "M";  hash[500] = "D";  hash[100] = "C";
	hash[50] = "L";  hash[10] = "X";  hash[5] = "V";
	hash[1] = "I"; hash[4] = "IV";  hash[9] = "IX";
	hash[40] = "XL";  hash[90] = "XC";
	hash[400] = "CD";  hash[900] = "CM";
}

string Solution::intToRoman(int num) {
	string str = "";
	map<int, string>::iterator it;
	while (num > 0)
	{
		if (num >= 1000) {
			str += hash[1000];
			num -= 1000;
		}
		else if (num < 1000 && num >= 100) 
		{
			if (num >= 900) {
				str += hash[900];
				num -= 900;
			}
			else if (num >= 500) {
				str += hash[500];
				num -= 500;
			}
			else if (num >= 400) {
				str += hash[400];
				num -= 400;
			}
			else if (num < 400) {
				str += hash[100];
				num -= 100;
			}
		}
		else if (num < 100 && num >= 10) {
			if (num >= 90) {
				str += hash[90];
				num -= 90;
			}
			else if (num >= 50) {
				str += hash[50];
				num -= 50;
			}
			else if (num >= 40) {
				str += hash[40];
				num -= 40;
			}
			else if (num >= 10) {
				str += hash[10];
				num -= 10;
			}
		}
		else if (num < 10) {
			if (num == 9) {
				str += hash[9];
				num -= 9;
			}
			else if (num >= 5) {
				str += hash[5];
				num -= 5;
			}
			else if (num == 4) {
				str += hash[4];
				num -= 4;
			}
			else if (num < 4) {
				str += hash[1];
				num -= 1;
			}
		}
	}
	return str;
}

int main() {
	Solution sol;
	int num;

	cin >> num;
	cout << sol.intToRoman(num) << endl;


	return 0;
}
