#include<iostream>
#include<string>
#include<map>
using namespace std;

class Solution {
private:
	map<string, int>hash;
public:
	string intToRoman(int num);
};

string Solution::intToRoman(int num) {
	string str = "";
	while (num != 0)
	{
		if (num >= 1000) {
			while (num < 1000)
			{
				str += 'M';
				num -= 1000;
			}
		}
		if (num >= 900) {
			str += "CM";
			num -= 900;
		}
		if (500 <= num && num < 900) {
			while (num < 100)
			{
				if (num >= 500) {
					str += 'D';
					num -= 500;
				}
				if (100 <= num) {
					str += 'C';
					num -= 100;
				}
			}
		}
		if (num >= 400 && num < 500) {
			str += "CD";
			num -= 400;
		}
		if (num < 400) {
			while (num < 100) {
				str += 'C';
				num -= 100;
			}
		}
		if (num >= 90 && num < 100) {
			str += "XC";
			num -= 90;
		}
		if (num >= 50 && num < 90) {
			while (num < 10)
			{
				if (num >= 50) {
					str += "L";
					num -= 50;
				}
				if (num < 50) {
					str += "X";
					num -= 10;
				}
			}
		}
		if (num >= 40 && num < 50) {
			str += "XL";
			num -= 40;
		}
		if (num >= 10 && num < 40) {
			while (num < 10) {
				str += 'X';
				num -= 10;
			}
		}
		if (num == 9) {
			str += "IX";
			num -= 9;
		}
		if (num >= 5 && num <= 8) {
			while (num != 0) {
				if (num >= 5) {
					str += 'V';
					num -= 5;
				}
				if (num < 5) {
					str += 'I';
					num -= 1;
				}
			}
		}
		if (num == 4) {
			str += "IV";
			num -= 4;
		}
		if (num < 4) {
			while (num != 0)
			{
				str += 'I';
				num -= 1;
			}
		}
	}
	return str;
}

int main() {
	int num;
	cin >> num;

	Solution sol;
	cout << sol.intToRoman(num) << endl;


	return 0;
}
